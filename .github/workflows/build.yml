name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Clone Ghidra
      uses: actions/checkout@v4
      with:
        repository: NationalSecurityAgency/ghidra
        ref: Ghidra_11.2_build
        path: ghidra
    - name: Set GHIDRA_VERSION
      run: |
        echo "GHIDRA_VERSION=$(grep application.version ghidra/Ghidra/application.properties | sed "s/application.version=//")" >> $GITHUB_ENV
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build (fetchDependencies)
      run: |
        cd ghidra
        gradle -I gradle/support/fetchDependencies.gradle init
    - name: Build (buildNatives)
      run: |
        cd ghidra
        sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
        sudo xcode-select -s "/Applications/Xcode_15.1.app"
        gradle buildNatives_mac_arm_64
        gradle buildNatives_mac_x86_64
        find . -name 'decompile' -type f | xargs file
    - name: Build (buildGhidra)
      run: |
        cd ghidra
        gradle buildGhidra -PallPlatforms
    # - name: Build (assembleAll)
    #   run: |
    #     cd ghidra
    #     gradle assembleAll
    - name: Deps
      run: |
        brew install python@3.12 || true
        brew link --overwrite python@3.12
        brew install imagemagick
        brew install gh
    - name: Unzip dist/ghidra.zip
      run: |
        ls -lah ghidra/build/dist/
        unzip ghidra/build/dist/ghidra_${{ env.GHIDRA_VERSION }}_*.zip -d ghidra/build/dist/
    - name: CreateGhidraApp
      run: |
        ls -lah
        ./CreateGhidraApp.sh ghidra/build/dist/ghidra_${{ env.GHIDRA_VERSION }}_DEV
        xattr -lr Ghidra.app
        xattr -cr Ghidra.app
        codesign --force --deep -s - Ghidra.app
        # codesign --force --deep -s - --entitlements entitlements.plist Ghidra.app
    # - name: Download OpenJDK 17
    #   run: |
    #     curl -L -o java.tar.gz 'https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.9%2B9/OpenJDK17U-jdk_aarch64_mac_hotspot_17.0.9_9.tar.gz'
    #     echo "823777266415347983bbd87ccd8136537242ff27e62f307b7e8521494c665f0d" java.tar.gz | shasum --algorithm 256 --check --status
    # - name: Install Java
    #   run: |
    #     tar zxf java.tar.gz -C Ghidra.app/
    - name: Zip Ghidra.app
      run: |
        zip Ghidra_${{ env.GHIDRA_VERSION }}.zip -r Ghidra.app/
        shasum -a 256 Ghidra_${{ env.GHIDRA_VERSION }}.zip > Ghidra_${{ env.GHIDRA_VERSION }}.zip.sha256
        echo "GHIDRA_SHA256=$(shasum -a 256 Ghidra_${{ env.GHIDRA_VERSION }}.zip | head -c 64)" >> $GITHUB_ENV
    # - uses: actions/upload-artifact@v4
    #   with:
    #     name: Ghidra
    #     path: |
    #       Ghidra_${{ env.GHIDRA_VERSION }}.zip
    #       Ghidra_${{ env.GHIDRA_VERSION }}.zip.sha256
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ls -lah
        gh release upload v${{ env.GHIDRA_VERSION }} --clobber Ghidra_${{ env.GHIDRA_VERSION }}.zip
        gh release upload v${{ env.GHIDRA_VERSION }} --clobber Ghidra_${{ env.GHIDRA_VERSION }}.zip.sha256
        gh release edit v${{ env.GHIDRA_VERSION }} --notes "sha256: \`${{ env.GHIDRA_SHA256 }}\`"